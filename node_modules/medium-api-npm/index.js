const axios = require("axios");

let userData = {};
let userPublications = [];
let userPosts = [];
async function getMediumArticles(options) {
  const config = {
    headers: {
      Host: "api.medium.com",
      "Content-type": "application/json",
      Authorization: `Bearer ${options.auth}`,
      Accept: "application/json",
      "Accept-Charset": "utf-8",
    },
  };
  await axios.get("https://api.medium.com/v1/me", config).then((res) => {
    userData = res.data.data;
  });
  await axios
    .get(`https://api.medium.com/v1/users/${userData.id}/publications`, config)
    .then((res) => {
      userPublications = res.data.data;
    });
  await axios
    .get(
      `https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@${userData.username}`
    )
    .then((res) => {
      userPosts = res.data.items;
    });
  return { userData, userPublications, userPosts };
}

async function addPost(options) {
  let data = {};
  const config = {
    headers: {
      Host: "api.medium.com",
      "Content-type": "application/json",
      Authorization: `Bearer ${options.auth}`,
      Accept: "application/json",
      "Accept-Charset": "utf-8",
    },
  };
  await axios.get("https://api.medium.com/v1/me", config).then((res) => {
    userData = res.data.data;
  });
  await axios
    .post(
      `https://api.medium.com/v1/users/${userData.id}/posts`,
      {
        title: options.title,
        contentFormat: "html",
        content: options.html,
        canonicalUrl: options.canonicalUrl,
        tags: options.tags,
        publishStatus: options.publishStatus,
        license: options.license,
        notifyFollwers: options.notifyFollwers,
      },
      config
    )
    .then((res) => (data = res.data))
    .catch((err) => console.log(err.response.data));
  return data;
}

module.exports = { getMediumArticles, addPost };
